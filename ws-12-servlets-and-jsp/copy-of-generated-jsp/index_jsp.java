/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-06 10:24:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.time.LocalDateTime;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {


public void printerTmp(String s) {
    System.out.println("printerTmp: " + s);
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/page_header.jsp", Long.valueOf(1710542239163L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.time.LocalDateTime");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <script>\r\n");
      out.write("            function startTime() {\r\n");
      out.write("              var today = new Date();\r\n");
      out.write("              var h = today.getHours();\r\n");
      out.write("              var m = today.getMinutes();\r\n");
      out.write("              var s = today.getSeconds();\r\n");
      out.write("              m = checkTime(m);\r\n");
      out.write("              s = checkTime(s);\r\n");
      out.write("              document.getElementById('current').innerHTML =\r\n");
      out.write("                h + \":\" + m + \":\" + s;\r\n");
      out.write("              var t = setTimeout(startTime, 500);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function checkTime(i) {\r\n");
      out.write("              if (i < 10) {\r\n");
      out.write("                i = \"0\" + i\r\n");
      out.write("              }; // add zero in front of numbers < 10\r\n");
      out.write("              return i;\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body onload=\"startTime()\">\r\n");
      out.write("        <h2>This is a header which was included from page_header.jsp</h2>\r\n");
      out.write("        <br/>\r\n");
      out.write("        <p id=\"time-description\">We achieve this by using javascript functions, that defined in page_header.jsp -> head -> script</p>\r\n");
      out.write("        <p id=\"current\">Time loading..</p>\r\n");
      out.write("        <br/>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<h2>Hello World! tralala</h2>\r\n");
      out.write("\r\n");

final LocalDateTime now = LocalDateTime.now();
out.println(now);
printerTmp(now.toString());

      out.write("\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<!-- Talk about scopes in next workshop -->\r\n");
      out.write("<p>Message from server: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.result}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<p>Message from server: ");
      out.print(request.getAttribute("result"));
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<p>Message from server: ");
      out.print((request.getAttribute("result") == null) ? "" : request.getAttribute("result"));
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<p>GET</p>\r\n");
      out.write("<form method=\"get\" action=\"fc\">\r\n");
      out.write("<!--operation=sum&command=sum&number-1=0&number-2=0&SubmitButtonType=sum-->\r\n");
      out.write("    <p>Please select your operation:</p>\r\n");
      out.write("    <input type=\"radio\" checked=\"checked\" id=\"sum\" name=\"operation\" value=\"sum\">\r\n");
      out.write("    <label for=\"sum\">SUM</label><br>\r\n");
      out.write("    <input type=\"radio\" id=\"subtract\" name=\"operation\" value=\"subtract\">\r\n");
      out.write("    <label for=\"subtract\">SUBTRACT</label><br>\r\n");
      out.write("    <input type=\"hidden\" name=\"command\" value=\"sum\"/>\r\n");
      out.write("    <input type=\"number\" name=\"number-1\" value=\"0\"/>\r\n");
      out.write("    <input type=\"number\" name=\"number-2\" value=\"0\"/>\r\n");
      out.write("    <button type=\"submit\" name=\"SubmitButtonType\" value=\"sum\">Submit</button>\r\n");
      out.write("</form>\r\n");
      out.write("<br/>\r\n");
      out.write("\r\n");
      out.write("<p>POST</p>\r\n");
      out.write("<form method=\"post\" action=\"fc\">\r\n");
      out.write("    <input type=\"hidden\" name=\"command\" value=\"postInputParameter\"/>\r\n");
      out.write("    <input type=\"text\" name=\"message\" value=\"..default value..\"/>\r\n");
      out.write("    <button type=\"submit\">Submit</button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
